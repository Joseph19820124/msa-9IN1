version: '3.8'

services:
  # Infrastructure Services
  consul:
    image: consul:1.15
    container_name: consul
    ports:
      - "8500:8500"
    command: "agent -server -bootstrap-expect=1 -ui -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - food-delivery-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_DB=food_delivery
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - food-delivery-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=api_gateway_db
      - LOG_LEVEL=INFO
    depends_on:
      - consul
      - postgres
    networks:
      - food-delivery-network

  # Order Service
  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8001:8001"
    environment:
      - HOST=0.0.0.0
      - PORT=8001
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=order_service_db
      - LOG_LEVEL=INFO
    depends_on:
      - consul
      - postgres
    networks:
      - food-delivery-network

  # Restaurant Service
  restaurant-service:
    build: ./restaurant-service
    container_name: restaurant-service
    ports:
      - "8002:8002"
    environment:
      - HOST=0.0.0.0
      - PORT=8002
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=restaurant_service_db
      - LOG_LEVEL=INFO
    depends_on:
      - consul
      - postgres
    networks:
      - food-delivery-network

  # Kitchen Service
  kitchen-service:
    build: ./kitchen-service
    container_name: kitchen-service
    ports:
      - "8003:8003"
    environment:
      - HOST=0.0.0.0
      - PORT=8003
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=kitchen_service_db
      - LOG_LEVEL=INFO
    depends_on:
      - consul
      - postgres
    networks:
      - food-delivery-network

  # Delivery Service
  delivery-service:
    build: ./delivery-service
    container_name: delivery-service
    ports:
      - "8004:8004"
    environment:
      - HOST=0.0.0.0
      - PORT=8004
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=delivery_service_db
      - LOG_LEVEL=INFO
    depends_on:
      - consul
      - postgres
    networks:
      - food-delivery-network

  # Accounting Service
  accounting-service:
    build: ./accounting-service
    container_name: accounting-service
    ports:
      - "8005:8005"
    environment:
      - HOST=0.0.0.0
      - PORT=8005
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=accounting_service_db
      - LOG_LEVEL=INFO
    depends_on:
      - consul
      - postgres
    networks:
      - food-delivery-network

  # Notification Service
  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8006:8006"
    environment:
      - HOST=0.0.0.0
      - PORT=8006
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=notification_service_db
      - LOG_LEVEL=INFO
    depends_on:
      - consul
      - postgres
    networks:
      - food-delivery-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - food-delivery-network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - food-delivery-network

  # Grafana for monitoring dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - food-delivery-network

networks:
  food-delivery-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  grafana_data: